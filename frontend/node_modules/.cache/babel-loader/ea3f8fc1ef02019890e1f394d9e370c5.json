{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/\\xC1rea de Trabalho/To-Do-List/frontend/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport styled from \"styled-components\";\nimport ToDoList from './ToDoList';\nimport ToDoListActionButton from './ToDoListActionButton';\nimport { sort } from './../actions';\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId,\n        type\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      this.props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type));\n    };\n  }\n\n  render() {\n    const {\n      lists\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"MVP - React\"), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"all-lists\",\n      direction: \"horizontal\",\n      type: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(ListContainer, Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), lists.map((list, index) => /*#__PURE__*/React.createElement(ToDoList, {\n      listID: list.id,\n      key: list.id,\n      title: list.title,\n      cards: list.cards,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    })), provided.placeholder, /*#__PURE__*/React.createElement(ToDoListActionButton, {\n      list: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/gabriel/Área de Trabalho/To-Do-List/frontend/src/components/App.js"],"names":["React","Component","connect","DragDropContext","Droppable","styled","ToDoList","ToDoListActionButton","sort","ListContainer","div","App","onDragEnd","result","destination","source","draggableId","type","props","dispatch","droppableId","index","render","lists","provided","droppableProps","innerRef","map","list","id","title","cards","placeholder","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;;;CAAjC;;AAKA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAE1BW,SAF0B,GAEbC,MAAD,IAAY;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA,WAAvB;AAAoCC,QAAAA;AAApC,UAA6CJ,MAAnD;;AAEA,UAAG,CAACC,WAAJ,EAAgB;AACd;AACD;;AAED,WAAKI,KAAL,CAAWC,QAAX,CACEX,IAAI,CACFO,MAAM,CAACK,WADL,EAEFN,WAAW,CAACM,WAFV,EAGFL,MAAM,CAACM,KAHL,EAIFP,WAAW,CAACO,KAJV,EAKFL,WALE,EAMFC,IANE,CADN;AAWD,KApByB;AAAA;;AAsB1BK,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AAEA,wBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKN,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,WAAvB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAA0D,MAAA,IAAI,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,QAAQ,iBACP,oBAAC,aAAD,oBACMA,QAAQ,CAACC,cADf;AAEE,MAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIIH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOP,KAAP,kBACV,oBAAC,QAAD;AACE,MAAA,MAAM,EAAEO,IAAI,CAACC,EADf;AAEE,MAAA,GAAG,EAAED,IAAI,CAACC,EAFZ;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,MAAA,KAAK,EAAEV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,EAaGG,QAAQ,CAACQ,WAbZ,eAcE,oBAAC,oBAAD;AAAsB,MAAA,IAAI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAFJ,CAFF,CADF,CADF;AA2BD;;AApDyB;;AAuD5B,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACX;AADmB,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CAAC+B,eAAD,CAAP,CAAyBtB,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport styled from \"styled-components\";\n\nimport ToDoList from './ToDoList';\nimport ToDoListActionButton from './ToDoListActionButton';\nimport { sort } from './../actions';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if(!destination){\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    )\n\n  }\n\n  render(){\n    const { lists } = this.props;\n  \n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div>\n          <h1>MVP - React</h1>\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListContainer \n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                { lists.map((list, index) => (\n                  <ToDoList \n                    listID={list.id} \n                    key={list.id} \n                    title={list.title} \n                    cards={list.cards}\n                    index={index}\n                  />\n                ))}\n                {provided.placeholder}\n                <ToDoListActionButton list />\n              </ListContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}